// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CarFormPresentation renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    className="car-form border border-primary"
    onSubmit={[Function]}
>
    <div
        className="car-form-fields"
    >
        <label>
            Name 
            <input
                name="name"
                onChange={[Function]}
                type="text"
                value="Audi"
            />
        </label>
        
        <label>
            Acceleration 
            <input
                name="acceleration"
                onChange={[Function]}
                step="0.1"
                type="number"
                value={12}
            />
        </label>
        
    </div>
    <div
        className="car-form-buttons"
    >
        <button
            className="text-primary"
            disabled={false}
            name="submit"
            type="submit"
        >
            Save
        </button>
        <button
            name="cancel"
            onClick={[Function]}
            type="button"
        >
            Cancel
        </button>
    </div>
</form>,
  "nodes": Array [
    <form
      className="car-form border border-primary"
      onSubmit={[Function]}
>
      <div
            className="car-form-fields"
      >
            <label>
                  Name 
                  <input
                        name="name"
                        onChange={[Function]}
                        type="text"
                        value="Audi"
                  />
            </label>
            
            <label>
                  Acceleration 
                  <input
                        name="acceleration"
                        onChange={[Function]}
                        step="0.1"
                        type="number"
                        value={12}
                  />
            </label>
            
      </div>
      <div
            className="car-form-buttons"
      >
            <button
                  className="text-primary"
                  disabled={false}
                  name="submit"
                  type="submit"
            >
                  Save
            </button>
            <button
                  name="cancel"
                  onClick={[Function]}
                  type="button"
            >
                  Cancel
            </button>
      </div>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <CarFormPresentation
        car={
                Object {
                        "acceleration": 12,
                        "name": "Audi",
                      }
        }
        changeHandlers={
                Object {
                        "acceleration": [Function],
                        "name": [Function],
                      }
        }
        errors={
                Object {
                        "acceleration": "",
                        "name": "",
                      }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "car": Object {
            "acceleration": 12,
            "name": "Audi",
          },
          "changeHandlers": Object {
            "acceleration": [Function],
            "name": [Function],
          },
          "errors": Object {
            "acceleration": "",
            "name": "",
          },
          "onCancel": [Function],
          "onSubmit": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          className="car-form border border-primary"
          onSubmit={[Function]}
>
          <div
                    className="car-form-fields"
          >
                    <label>
                              Name 
                              <input
                                        name="name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Audi"
                              />
                    </label>
                    
                    <label>
                              Acceleration 
                              <input
                                        name="acceleration"
                                        onChange={[Function]}
                                        step="0.1"
                                        type="number"
                                        value={12}
                              />
                    </label>
                    
          </div>
          <div
                    className="car-form-buttons"
          >
                    <button
                              className="text-primary"
                              disabled={false}
                              name="submit"
                              type="submit"
                    >
                              Save
                    </button>
                    <button
                              name="cancel"
                              onClick={[Function]}
                              type="button"
                    >
                              Cancel
                    </button>
          </div>
</form>,
        "_debugID": 2,
        "_renderedOutput": <form
          className="car-form border border-primary"
          onSubmit={[Function]}
>
          <div
                    className="car-form-fields"
          >
                    <label>
                              Name 
                              <input
                                        name="name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Audi"
                              />
                    </label>
                    
                    <label>
                              Acceleration 
                              <input
                                        name="acceleration"
                                        onChange={[Function]}
                                        step="0.1"
                                        type="number"
                                        value={12}
                              />
                    </label>
                    
          </div>
          <div
                    className="car-form-buttons"
          >
                    <button
                              className="text-primary"
                              disabled={false}
                              name="submit"
                              type="submit"
                    >
                              Save
                    </button>
                    <button
                              name="cancel"
                              onClick={[Function]}
                              type="button"
                    >
                              Cancel
                    </button>
          </div>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CarFormPresentation
    car={
        Object {
            "acceleration": 12,
            "name": "Audi",
          }
    }
    changeHandlers={
        Object {
            "acceleration": [Function],
            "name": [Function],
          }
    }
    errors={
        Object {
            "acceleration": "",
            "name": "",
          }
    }
    onCancel={[Function]}
    onSubmit={[Function]}
/>,
}
`;

exports[`CarFormPresentation renders correctly with field errors but cannot submit 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    className="car-form border border-primary"
    onSubmit={[Function]}
>
    <div
        className="car-form-fields"
    >
        <label>
            Name 
            <input
                name="name"
                onChange={[Function]}
                type="text"
                value="Audi"
            />
        </label>
        <span
            className="text-danger"
        >
            <small>
                Not a good name
            </small>
        </span>
        <label>
            Acceleration 
            <input
                name="acceleration"
                onChange={[Function]}
                step="0.1"
                type="number"
                value={12}
            />
        </label>
        <span
            className="text-danger"
        >
            <small>
                This car sucks
            </small>
        </span>
    </div>
    <div
        className="car-form-buttons"
    >
        <button
            className="text-primary"
            disabled={true}
            name="submit"
            type="submit"
        >
            Save
        </button>
        <button
            name="cancel"
            onClick={[Function]}
            type="button"
        >
            Cancel
        </button>
    </div>
</form>,
  "nodes": Array [
    <form
      className="car-form border border-primary"
      onSubmit={[Function]}
>
      <div
            className="car-form-fields"
      >
            <label>
                  Name 
                  <input
                        name="name"
                        onChange={[Function]}
                        type="text"
                        value="Audi"
                  />
            </label>
            <span
                  className="text-danger"
            >
                  <small>
                        Not a good name
                  </small>
            </span>
            <label>
                  Acceleration 
                  <input
                        name="acceleration"
                        onChange={[Function]}
                        step="0.1"
                        type="number"
                        value={12}
                  />
            </label>
            <span
                  className="text-danger"
            >
                  <small>
                        This car sucks
                  </small>
            </span>
      </div>
      <div
            className="car-form-buttons"
      >
            <button
                  className="text-primary"
                  disabled={true}
                  name="submit"
                  type="submit"
            >
                  Save
            </button>
            <button
                  name="cancel"
                  onClick={[Function]}
                  type="button"
            >
                  Cancel
            </button>
      </div>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <CarFormPresentation
        car={
                Object {
                        "acceleration": 12,
                        "name": "Audi",
                      }
        }
        changeHandlers={
                Object {
                        "acceleration": [Function],
                        "name": [Function],
                      }
        }
        errors={
                Object {
                        "acceleration": "This car sucks",
                        "name": "Not a good name",
                      }
        }
        onCancel={[Function]}
        onSubmit={[Function]}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "car": Object {
            "acceleration": 12,
            "name": "Audi",
          },
          "changeHandlers": Object {
            "acceleration": [Function],
            "name": [Function],
          },
          "errors": Object {
            "acceleration": "This car sucks",
            "name": "Not a good name",
          },
          "onCancel": [Function],
          "onSubmit": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          className="car-form border border-primary"
          onSubmit={[Function]}
>
          <div
                    className="car-form-fields"
          >
                    <label>
                              Name 
                              <input
                                        name="name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Audi"
                              />
                    </label>
                    <span
                              className="text-danger"
                    >
                              <small>
                                        Not a good name
                              </small>
                    </span>
                    <label>
                              Acceleration 
                              <input
                                        name="acceleration"
                                        onChange={[Function]}
                                        step="0.1"
                                        type="number"
                                        value={12}
                              />
                    </label>
                    <span
                              className="text-danger"
                    >
                              <small>
                                        This car sucks
                              </small>
                    </span>
          </div>
          <div
                    className="car-form-buttons"
          >
                    <button
                              className="text-primary"
                              disabled={true}
                              name="submit"
                              type="submit"
                    >
                              Save
                    </button>
                    <button
                              name="cancel"
                              onClick={[Function]}
                              type="button"
                    >
                              Cancel
                    </button>
          </div>
</form>,
        "_debugID": 4,
        "_renderedOutput": <form
          className="car-form border border-primary"
          onSubmit={[Function]}
>
          <div
                    className="car-form-fields"
          >
                    <label>
                              Name 
                              <input
                                        name="name"
                                        onChange={[Function]}
                                        type="text"
                                        value="Audi"
                              />
                    </label>
                    <span
                              className="text-danger"
                    >
                              <small>
                                        Not a good name
                              </small>
                    </span>
                    <label>
                              Acceleration 
                              <input
                                        name="acceleration"
                                        onChange={[Function]}
                                        step="0.1"
                                        type="number"
                                        value={12}
                              />
                    </label>
                    <span
                              className="text-danger"
                    >
                              <small>
                                        This car sucks
                              </small>
                    </span>
          </div>
          <div
                    className="car-form-buttons"
          >
                    <button
                              className="text-primary"
                              disabled={true}
                              name="submit"
                              type="submit"
                    >
                              Save
                    </button>
                    <button
                              name="cancel"
                              onClick={[Function]}
                              type="button"
                    >
                              Cancel
                    </button>
          </div>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <CarFormPresentation
    car={
        Object {
            "acceleration": 12,
            "name": "Audi",
          }
    }
    changeHandlers={
        Object {
            "acceleration": [Function],
            "name": [Function],
          }
    }
    errors={
        Object {
            "acceleration": "This car sucks",
            "name": "Not a good name",
          }
    }
    onCancel={[Function]}
    onSubmit={[Function]}
/>,
}
`;
